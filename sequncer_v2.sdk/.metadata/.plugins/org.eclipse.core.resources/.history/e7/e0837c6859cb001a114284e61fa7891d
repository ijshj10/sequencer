#ifndef TIMER_H
#define TIMER_H

#include "io_map.h"
#include "io_rw.h"

#ifdef __cplusplus
extern "C"{
#endif

static const uint32_t timer_base = get_slot_addr(BRIDGE_BASE, S0_SYS_TIMER);
static uint32_t ctrl = 1;

enum {
	counter_upper_reg = 0,
	counter_lower_reg = 1,
	ctrl_reg = 2
};

enum {
	go_field = 0x00000001,
	clr_field = 0x00000002
};

void timer_init(){
	io_write(timer_base, ctrl_reg, ctrl);
}

void pause(){
	ctrl =  ctrl & ~ go_field;
	io_write(timer_base, ctrl_reg, ctrl);
}

void go(){
	ctrl = ctrl | go_field;
	io_write(timer_base, ctrl_reg, ctrl);
}

void clear(){
	io_write(timer_base, ctrl_reg, ctrl | clr_field);
}

uint64_t read_tick(){

}

uint64_t read_time_us(){

}

void sleep(uint64_t tick){

}

void sleep_us(uint64_t us){

}


#ifdef __cplusplus
}
#endif

#endif
